<UserControl x:Class="SPRNetTool.View.Widgets.WindowTitleBar"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:local="clr-namespace:SPRNetTool.View.Widgets"
			 xmlns:def="clr-namespace:SPRNetTool"
			 xmlns:bview="clr-namespace:SPRNetTool.View.Base"
			 mc:Ignorable="d"
			 d:DesignHeight="40"
			 d:DesignWidth="800">
	<UserControl.Resources>
		<!--Window control button-->
		<Style x:Key="WindowControlButton"
			   TargetType="{x:Type Button}">
			<Style.Triggers>
				<Trigger Property="IsMouseOver"
						 Value="True">
					<Setter Property="Foreground"
							Value="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundLevel0}}" />
				</Trigger>
			</Style.Triggers>
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome"
					Value="True" />
			<Setter Property="Background"
					Value="Transparent" />
			<Setter Property="Height"
					Value="40" />
			<Setter Property="Width"
					Value="40" />
			<Setter Property="VerticalAlignment"
					Value="Stretch" />
			<Setter Property="Foreground"
					Value="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundLevel1}}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								x:Name="MainBorder">
							<Path x:Name="ContentPath"
								  Width="10"
								  Height="10"
								  Fill="{TemplateBinding Foreground}"
								  Data="{Binding Source={StaticResource CloseButton}}"
								  Stretch="Uniform" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver"
									 Value="True">
								<Setter Property="Height"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Width"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Background"
										TargetName="MainBorder"
										Value="#4CEB2838" />
							</Trigger>

						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>


		</Style>

		<!--Window Maximize button-->
		<Style x:Key="WindowMaximizeButton"
			   BasedOn="{StaticResource WindowControlButton}"
			   TargetType="{x:Type Button}">
			<Style.Triggers>
				<DataTrigger Value="NoResize"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
					<Setter Property="Visibility"
							Value="Collapsed" />
				</DataTrigger>

				<DataTrigger Value="CanResize"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
					<Setter Property="Visibility"
							Value="Visible" />
				</DataTrigger>

				<DataTrigger Value="Maximized"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}">
					<Setter Property="Visibility"
							Value="Collapsed" />
				</DataTrigger>
			</Style.Triggers>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								x:Name="MainBorder">
							<Path x:Name="ContentPath"
								  Width="10"
								  Height="10"
								  Fill="{TemplateBinding Foreground}"
								  Data="{Binding Source={StaticResource MaximizeButton}}"
								  Stretch="Uniform" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver"
									 Value="True">
								<Setter Property="Height"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Width"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Background"
										TargetName="MainBorder"
										Value="#4C989898" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Window smallmize button-->
		<Style x:Key="WindowSmallmizeButton"
			   BasedOn="{StaticResource WindowControlButton}"
			   TargetType="{x:Type Button}">
			<Style.Triggers>
				<DataTrigger Value="NoResize"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
					<Setter Property="Visibility"
							Value="Collapsed" />
				</DataTrigger>

				<DataTrigger Value="CanResize"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
					<Setter Property="Visibility"
							Value="Visible" />
				</DataTrigger>

				<DataTrigger Value="Normal"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}">
					<Setter Property="Visibility"
							Value="Collapsed" />
				</DataTrigger>
			</Style.Triggers>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								x:Name="MainBorder">
							<Path x:Name="ContentPath"
								  Width="10"
								  Height="10"
								  Fill="{TemplateBinding Foreground}"
								  Data="{Binding Source={StaticResource SmallmizeButton}}"
								  Stretch="Uniform" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver"
									 Value="True">
								<Setter Property="Height"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Width"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Background"
										TargetName="MainBorder"
										Value="#4C989898" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Window Minimize Button -->
		<Style x:Key="WindowMinimizeButton"
			   BasedOn="{StaticResource WindowControlButton}"
			   TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="MainBorder"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}">
							<Path x:Name="ContentPath"
								  Width="10"
								  Height="10"
								  Fill="{TemplateBinding Foreground}"
								  Data="{Binding Source={StaticResource MinimizeButton}}"
								  Stretch="Uniform" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver"
									 Value="True">
								<Setter Property="Height"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Width"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Background"
										TargetName="MainBorder"
										Value="#4C989898" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="menuParentStyle"
			   TargetType="MenuItem">
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome"
					Value="True" />
			<Setter Property="Foreground"
					Value="White" />
			<Setter Property="BorderBrush"
					Value="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundLevel1}}" />
			<Setter Property="BorderThickness"
					Value="1" />
			<Setter Property="Margin"
					Value="0,0" />
			<Setter Property="Padding"
					Value="10,0" />

			<Style.Triggers>
				<Trigger Property="IsHighlighted"
						 Value="True">
					<Setter Property="Panel.ZIndex"
							Value="2" />
				</Trigger>
				<Trigger Property="IsHighlighted"
						 Value="False">
					<Setter Property="Panel.ZIndex"
							Value="0" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<SolidColorBrush x:Key="Menu.Static.Foreground"
						 Color="White" />
		<SolidColorBrush x:Key="Menu.Static.Background"
						 Color="Black" />
		<SolidColorBrush x:Key="Menu.Static.Border"
						 Color="Transparent" />
		<Style x:Key="MenuItemStyle1"
			   TargetType="{x:Type MenuItem}">
			<Setter Property="HorizontalContentAlignment"
					Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
			<Setter Property="VerticalContentAlignment"
					Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
			<Setter Property="Background"
					Value="Transparent" />
			<Setter Property="BorderBrush"
					Value="Transparent" />
			<Setter Property="Foreground"
					Value="White" />

			<Setter Property="ScrollViewer.PanningMode"
					Value="Both" />
			<Setter Property="Stylus.IsFlicksEnabled"
					Value="False" />

			<Setter Property="Template"
					Value="{DynamicResource MenuItemControlTemplate1}" />
			<Style.Triggers>
				<Trigger Property="Role"
						 Value="TopLevelHeader">
					<Setter Property="Background"
							Value="Transparent" />
					<Setter Property="BorderBrush"
							Value="Transparent" />
					<Setter Property="Foreground"
							Value="{StaticResource Menu.Static.Foreground}" />
					<Setter Property="Template"
							Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
					<Setter Property="Padding"
							Value="6,0" />
				</Trigger>
				<Trigger Property="Role"
						 Value="TopLevelItem">
					<Setter Property="Background"
							Value="{StaticResource Menu.Static.Background}" />
					<Setter Property="BorderBrush"
							Value="{StaticResource Menu.Static.Border}" />
					<Setter Property="Foreground"
							Value="{StaticResource Menu.Static.Foreground}" />
					<Setter Property="Template"
							Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
					<Setter Property="Padding"
							Value="6,0" />
				</Trigger>
				<Trigger Property="Role"
						 Value="SubmenuHeader">
					<Setter Property="Template"
							Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
				</Trigger>
				<Trigger Property="IsMouseOver"
						 Value="true">
					<Setter Property="Background"
							Value="Pink" />
				</Trigger>
				<Trigger Property="IsKeyboardFocusWithin"
						 Value="true">
					<Setter Property="Background"
							Value="{StaticResource ResourceKey={x:Static def:Definitions.MouseOverMenuItemBackgroundBrush}}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<ControlTemplate x:Key="MenuItemControlTemplate1"
						 TargetType="{x:Type MenuItem}">
			<Border x:Name="templateRoot"
					MinWidth="200"
					MinHeight="40"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"
					Background="{TemplateBinding Background}"
					SnapsToDevicePixels="True">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="2" />
						<RowDefinition Height="*" />
						<RowDefinition Height="2" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="5" />
						<ColumnDefinition MinWidth="22"
										  Width="Auto" />
						<ColumnDefinition Width="2" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="10" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>

					<Rectangle x:Name="RecEff1"
							   Grid.Row="0"
							   Visibility="Hidden"
							   Grid.ColumnSpan="10">
						<Rectangle.Fill>
							<LinearGradientBrush EndPoint="0.5,1"
												 StartPoint="0.5,0">
								<GradientStop Color="#FF2E3C25" />
								<GradientStop Color="#FF548235"
											  Offset="0.5" />
								<GradientStop Color="#FF2E3C25"
											  Offset="1" />
							</LinearGradientBrush>
						</Rectangle.Fill>
						<Rectangle.Effect>
							<DropShadowEffect ShadowDepth="1"
											  Color="#FF9CB297"
											  Opacity="1"
											  BlurRadius="3" />
						</Rectangle.Effect>
					</Rectangle>
					<Rectangle x:Name="RecEff2"
							   Grid.Row="0"
							   Visibility="Hidden"
							   Height="1"
							   Fill="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundLevel1}}"
							   Grid.ColumnSpan="10" />

					<Rectangle x:Name="RecEff3"
							   Visibility="Hidden"
							   Grid.Row="2"
							   Grid.ColumnSpan="10">
						<Rectangle.Fill>
							<LinearGradientBrush EndPoint="0.5,1"
												 StartPoint="0.5,0">
								<GradientStop Color="#FF2E3C25" />
								<GradientStop Color="#FF548235"
											  Offset="0.5" />
								<GradientStop Color="#FF2E3C25"
											  Offset="1" />
							</LinearGradientBrush>
						</Rectangle.Fill>
						<Rectangle.Effect>
							<DropShadowEffect ShadowDepth="1"
											  Color="#FF9CB297"
											  Opacity="1"
											  BlurRadius="3" />
						</Rectangle.Effect>
					</Rectangle>
					<Rectangle x:Name="RecEff4"
							   Grid.Row="2"
							   Visibility="Hidden"
							   Height="1"
							   Fill="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundLevel1}}"
							   Grid.ColumnSpan="10" />


					<ContentPresenter x:Name="Icon"
									  Grid.Row="1"
									  Content="{TemplateBinding Icon}"
									  ContentSource="Icon"
									  HorizontalAlignment="Center"
									  Grid.Column="3"
									  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									  VerticalAlignment="Center" />
					<Border x:Name="GlyphPanel"
							BorderBrush="#FF26A0DA"
							BorderThickness="1"
							Grid.Row="1"
							Grid.Column="1"
							Background="#3D26A0DA"
							ClipToBounds="False"
							HorizontalAlignment="Center"
							Height="22"
							Visibility="Hidden"
							VerticalAlignment="Center"
							Width="22">
						<Path x:Name="Glyph"
							  Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
							  Fill="#FF212121"
							  FlowDirection="LeftToRight"
							  Height="11"
							  Width="10" />
					</Border>
					<TextBlock x:Name="HeaderTextBlock"
							   Text="{TemplateBinding Header}"
							   Grid.Column="5"
							   Grid.Row="1"
							   FontSize="16"
							   FontFamily="Calibri"
							   VerticalAlignment="Center"
							   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="Icon"
						 Value="{x:Null}">
					<Setter Property="Visibility"
							TargetName="Icon"
							Value="Collapsed" />
				</Trigger>
				<Trigger Property="IsChecked"
						 Value="True">
					<Setter Property="Visibility"
							TargetName="GlyphPanel"
							Value="Visible" />
					<Setter Property="Visibility"
							TargetName="Icon"
							Value="Collapsed" />
				</Trigger>
				<Trigger Property="IsHighlighted"
						 Value="True">
					<Setter TargetName="RecEff1"
							Property="Visibility"
							Value="Visible" />
					<Setter TargetName="RecEff2"
							Property="Visibility"
							Value="Visible" />
					<Setter TargetName="RecEff3"
							Property="Visibility"
							Value="Visible" />
					<Setter TargetName="RecEff4"
							Property="Visibility"
							Value="Visible" />
					<Setter Property="Background"
							TargetName="templateRoot"
							Value="{StaticResource ResourceKey={x:Static def:Definitions.MouseOverMenuItemBackgroundBrush}}" />
				</Trigger>
				<Trigger Property="IsEnabled"
						 Value="False">
					<Setter Property="TextElement.Foreground"
							TargetName="templateRoot"
							Value="#FF707070" />
					<Setter Property="Fill"
							TargetName="Glyph"
							Value="#FF707070" />
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsHighlighted"
								   Value="True" />
						<Condition Property="IsEnabled"
								   Value="False" />
					</MultiTrigger.Conditions>
					<Setter Property="Background"
							TargetName="templateRoot"
							Value="#0A000000" />
					<Setter Property="BorderBrush"
							TargetName="templateRoot"
							Value="#21000000" />
				</MultiTrigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<ControlTemplate x:Key="MenuItemControlTemplate2"
						 TargetType="{x:Type MenuItem}">
			<Border x:Name="templateRoot"
					ClipToBounds="False"
					SnapsToDevicePixels="True">

				<Grid VerticalAlignment="Center"
					  SnapsToDevicePixels="True">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>


					<Border x:Name="EffectBorder2"
							Grid.ColumnSpan="2"
							ClipToBounds="False"
							CornerRadius="10"
							Visibility="Hidden"
							BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding BorderBrush}">
						<Border.Effect>
							<DropShadowEffect ShadowDepth="0"
											  Color="#FF9CB297"
											  Opacity="1"
											  BlurRadius="20" />
						</Border.Effect>
					</Border>
					<Border x:Name="EffectBorder"
							Grid.ColumnSpan="2"
							ClipToBounds="False"
							CornerRadius="10"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" />

					<ContentPresenter x:Name="Icon"
									  Content="{TemplateBinding Icon}"
									  ContentSource="Icon"
									  HorizontalAlignment="Center"
									  Height="16"
									  Margin="3"
									  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									  VerticalAlignment="Center"
									  Width="16" />
					<Path x:Name="GlyphPanel"
						  Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
						  Fill="{TemplateBinding Foreground}"
						  FlowDirection="LeftToRight"
						  Margin="3"
						  Visibility="Collapsed"
						  VerticalAlignment="Center" />
					<TextBlock x:Name="HeaderTextBlock"
							   Text="{TemplateBinding Header}"
							   Grid.Column="1"
							   Height="15"
							   FontSize="12"
							   FontFamily="Calibri"
							   Margin="0,4"
							   Padding="20,0,20,0"
							   VerticalAlignment="Center"
							   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					<Popup x:Name="PART_Popup"
						   AllowsTransparency="True"
						   Focusable="False"
						   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
						   VerticalOffset="5"
						   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
						   Placement="Bottom">
						<Border x:Name="SubMenuBorder"
								CornerRadius="20"
								BorderBrush="{StaticResource ResourceKey={x:Static def:Definitions.MenuItemBorderBrush}}"
								BorderThickness="2"
								ClipToBounds="True"
								Background="{StaticResource ResourceKey={x:Static def:Definitions.MenuItemBackground}}"
								Padding="1,12">
							<ScrollViewer x:Name="SubMenuScrollViewer"
										  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<ItemsPresenter x:Name="ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Cycle"
												Grid.IsSharedSizeScope="True"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												KeyboardNavigation.TabNavigation="Cycle" />
							</ScrollViewer>
						</Border>
					</Popup>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsHighlighted"
						 Value="True">
					<Setter Property="Background"
							TargetName="EffectBorder"
							Value="{StaticResource ResourceKey={x:Static def:Definitions.MouseOverMenuItemBackgroundBrush}}" />

					<Setter TargetName="EffectBorder2"
							Property="Visibility"
							Value="Visible" />
				</Trigger>
				<Trigger Property="IsSuspendingPopupAnimation"
						 Value="True">
					<Setter Property="PopupAnimation"
							TargetName="PART_Popup"
							Value="None" />
				</Trigger>
				<Trigger Property="Icon"
						 Value="{x:Null}">
					<Setter Property="Visibility"
							TargetName="Icon"
							Value="Collapsed" />
				</Trigger>
				<Trigger Property="IsChecked"
						 Value="True">
					<Setter Property="Visibility"
							TargetName="GlyphPanel"
							Value="Visible" />
					<Setter Property="Visibility"
							TargetName="Icon"
							Value="Collapsed" />
				</Trigger>

				<Trigger Property="IsEnabled"
						 Value="False">
					<Setter Property="TextElement.Foreground"
							TargetName="templateRoot"
							Value="#FF707070" />
					<Setter Property="Fill"
							TargetName="GlyphPanel"
							Value="#FF707070" />
				</Trigger>
				<!--<Trigger Property="CanContentScroll"
						 SourceName="SubMenuScrollViewer"
						 Value="False">
					<Setter Property="Canvas.Top"
							TargetName="OpaqueRect"
							Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
					<Setter Property="Canvas.Left"
							TargetName="OpaqueRect"
							Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
				</Trigger>-->
			</ControlTemplate.Triggers>
		</ControlTemplate>
	</UserControl.Resources>
	<Grid Background="{StaticResource ResourceKey={x:Static def:Definitions.MenuItemBackground}}"
		  x:Name="ContainerGrid">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="Auto" />

		</Grid.ColumnDefinitions>

		<StackPanel Orientation="Horizontal"
					HorizontalAlignment="Left">
			<Path Fill="{StaticResource ResourceKey={x:Static def:Definitions.BackgroundLevel10}}"
				  Height="25"
				  Stretch="Uniform"
				  Margin="5,0,0,0"
				  Data="{StaticResource ResourceKey={x:Static def:Definitions.ArtWizLogoGeometry}}"
				  Width="25" />

			<Menu x:Name="MainMenu"
				  Background="{StaticResource ResourceKey={x:Static def:Definitions.MenuItemBackground}}"
				  Height="27"
				  Panel.ZIndex="1"
				  Padding="5,0,0,0"
				  VerticalContentAlignment="Center">
				<MenuItem Header="Home"
						  Style="{StaticResource menuParentStyle}"
						  ItemContainerStyle="{DynamicResource MenuItemStyle1}"
						  Template="{DynamicResource MenuItemControlTemplate2}">
					<MenuItem Header="Developer mode"
							  x:Name="DeveloperModeMenu">
						<MenuItem.Icon>
							<Path Fill="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundLevel1}}"
								  Stretch="Uniform"
								  Width="16"
								  Height="16"
								  Data="{StaticResource ResourceKey={x:Static def:Definitions.DeveloperModeIconGeometry}}" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Spr work space"
							  x:Name="SprWorkSpceMenu">
						<MenuItem.Icon>
							<Path Fill="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundLevel1}}"
								  Stretch="Uniform"
								  Width="16"
								  Height="16"
								  Data="{StaticResource ResourceKey={x:Static def:Definitions.SprWorkSpaceIconGeometry}}" />
						</MenuItem.Icon>
					</MenuItem>
				</MenuItem>
				<MenuItem Header="About"
						  Margin="-15,0"
						  Style="{StaticResource menuParentStyle}"
						  ItemContainerStyle="{DynamicResource MenuItemStyle1}"
						  Template="{DynamicResource MenuItemControlTemplate2}" />
			</Menu>
		</StackPanel>


		<!--Window Buttons-->
		<StackPanel x:Name="WindowControlPanel"
					Grid.Column="1"
					Orientation="Horizontal">

			<Button x:Name="MinimizeButton"
					Margin="0,1"
					Style="{StaticResource WindowMinimizeButton}" />
			<Button x:Name="SmallmizeButton"
					Margin="1,1"
					Style="{StaticResource WindowSmallmizeButton}" />
			<Button x:Name="MaximizeButton"
					Margin="1,1"
					Style="{StaticResource WindowMaximizeButton}" />
			<Button x:Name="CloseButton"
					Margin="0,1"
					Style="{StaticResource WindowControlButton}" />
		</StackPanel>

	</Grid>
</UserControl>
