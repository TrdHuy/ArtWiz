on:      
  push:
    branches:
      - '*'
jobs:

  build:
    runs-on: windows-latest
    env:
     VERSION_UP_ISSUE_ID: 52
     # GIT_CONTEXT: ${{ toJson(github) }}
     
    steps:
    ################### CORE REGION #######################
    - name: Checkout repo
      uses: actions/checkout@v3
      with: 
        fetch-depth: 0
    - name: Check Commit Message by github script
      uses: actions/github-script@v5
      id: get-last-issue-id
      with:
        result-encoding: string
        script: |
          const versionUpIssueId = process.env.VERSION_UP_ISSUE_ID;
          const commits = ${{ toJSON(github.event.commits) }}
          const commitMessages = commits.map(function (commit) {
              return commit.message;
          });
          const regex = /^\[#(\d+)\] .+/;

          const issueIds = commitMessages.map(function (message) {
              const match = message.match(regex);
              if (match && match[1]) {
                return match[1]; // Lấy số id từ kết quả match
              } else {
                throw new Error(`Commit message "${message}" is invaild `);
              }
          });

          for (const issueId of issueIds) {
            try {
              const rawData = await github.rest.issues.get({
                issue_number: issueId,
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              const data = rawData.data;
              const issueUrl = data.html_url;
              if (issueUrl.includes("/issues/")) {
                  console.log("Đây là URL của issue.");
              } else {
                 throw new Error(`github ID: "${issueId}" not invaild `);
              }
              console.log(`Tiêu đề: ${data.title}`);
              console.log(`versionUpIssueId: ${versionUpIssueId}`);
            } catch (error) {
              console.log(`Issue #${issueId} không tồn tại.`);
              console.log(error);
            }
          }
          return issueIds[issueIds.length - 1];
          
    ################### END CORE REGION #######################
